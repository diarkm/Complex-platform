{"ast":null,"code":"import{history}from\"./history\";import axios from\"axios\";var accessToken='';var apiURL='http://79.143.31.221';/*\r\nconst session = require('express-session')\r\nconst express = require('express')\r\n\r\nconst app = express()\r\n\r\napp.use(session({\r\n    secret: process.env.SESSION_SECRET,\r\n    saveUninitialized: true,\r\n    resave: false,\r\n    cookie: {\r\n        httpOnly: true,\r\n        maxAge: parseInt(process.env.SESSION_MAX_AGE)\r\n    }\r\n}))*/var authAxios=axios.create({baseURL:apiURL,headers:{Authorization:\"Bearer \".concat(accessToken)}});// ЛОГИН\nexport var loginForm=function loginForm(user){return function(dispatch){authAxios.post(\"/user/login\",{login:user.login,password:user.password}).then(function(response){console.log({response:response});var isLogged;//Если такой пользователь существует\nif(response.data){accessToken=response.data.token;isLogged=response.data.response;if(isLogged){dispatch({type:\"LOGIN_WITH_LOGIN\",payload:{isLogged:isLogged,loggedInWith:\"login\",name:\"Кундакбаев Диар\",accessToken:accessToken}});history.push(\"/dashboard\");}else{console.log(response.data.errors);}}}).catch(function(err){return console.log(err);});};};//Выход\nexport var logoutWithLogin=function logoutWithLogin(){return function(dispatch){dispatch({type:\"LOGOUT_WITH_LOGIN\",payload:{}});history.push(\"/\");};};// РЕГИСТРАЦИЯ\nexport var signupForm=function signupForm(login,firstName,lastName,password,confirmPass,email,avatar,phoneNumber){return function(dispatch){if(password==confirmPass){axios.post(\"http://79.143.31.221/user/signup\",{login:login,firstName:firstName,lastName:lastName,password:password,email:email,//avatar: avatar,\nphoneNumber:phoneNumber}).then(function(response){var isLogged;if(response.data){isLogged=response.data.response;console.log(response.data);if(isLogged){dispatch({type:\"LOGIN_WITH_LOGIN\",payload:{isLogged:isLogged,loggedInWith:\"login\",name:lastName+\" \"+firstName}});history.push(\"/dashboard\");}else{console.log(response.data.errors);}}});}else{console.log(\"Пароли не совпадают\");}};};","map":{"version":3,"sources":["D:/Work/Projects/GIQ/giq.itgeek.kz/src/server.js"],"names":["history","axios","accessToken","apiURL","authAxios","create","baseURL","headers","Authorization","loginForm","user","dispatch","post","login","password","then","response","console","log","isLogged","data","token","type","payload","loggedInWith","name","push","errors","catch","err","logoutWithLogin","signupForm","firstName","lastName","confirmPass","email","avatar","phoneNumber"],"mappings":"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","sourcesContent":["import { history } from \"./history\"\r\nimport axios from \"axios\"\r\n\r\nlet accessToken = ''\r\n\r\nconst apiURL = 'http://79.143.31.221'\r\n/*\r\nconst session = require('express-session')\r\nconst express = require('express')\r\n\r\nconst app = express()\r\n\r\napp.use(session({\r\n    secret: process.env.SESSION_SECRET,\r\n    saveUninitialized: true,\r\n    resave: false,\r\n    cookie: {\r\n        httpOnly: true,\r\n        maxAge: parseInt(process.env.SESSION_MAX_AGE)\r\n    }\r\n}))*/\r\n\r\nconst authAxios = axios.create({\r\n  baseURL: apiURL,\r\n  headers: {\r\n    Authorization: `Bearer ${accessToken}`\r\n  }\r\n\r\n})\r\n\r\n\r\n// ЛОГИН\r\nexport const loginForm = user => {\r\n  return dispatch => {\r\n    authAxios\r\n      .post(`/user/login`, {\r\n        login: user.login,\r\n        password: user.password\r\n      })\r\n      .then(response => {\r\n        console.log({response});\r\n        var isLogged;\r\n\r\n        //Если такой пользователь существует\r\n        if (response.data) {\r\n          accessToken = response.data.token;\r\n          isLogged = response.data.response;\r\n          if(isLogged){\r\n            dispatch({\r\n              type: \"LOGIN_WITH_LOGIN\",\r\n              payload: { \r\n                isLogged, \r\n                loggedInWith: \"login\",\r\n                name: \"Кундакбаев Диар\",\r\n                accessToken: accessToken\r\n              }\r\n            })\r\n            history.push(\"/dashboard\")\r\n          } else {\r\n            console.log(response.data.errors);\r\n          }\r\n\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\n//Выход\r\nexport const logoutWithLogin = () => {\r\n    return dispatch => {\r\n      dispatch({ type: \"LOGOUT_WITH_LOGIN\", payload: {} })\r\n      history.push(\"/\")\r\n    }\r\n}\r\n\r\n// РЕГИСТРАЦИЯ\r\nexport const signupForm = (\r\n    login,\r\n    firstName,\r\n    lastName,\r\n    password,\r\n    confirmPass,\r\n    email,\r\n    avatar,\r\n    phoneNumber\r\n) => {\r\n  return dispatch => {\r\n    if(password == confirmPass) {\r\n      axios\r\n        .post(\"http://79.143.31.221/user/signup\", {\r\n          login: login,\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n          password: password,\r\n          email: email,\r\n          //avatar: avatar,\r\n          phoneNumber: phoneNumber\r\n        })\r\n        .then(response => {\r\n          var isLogged;\r\n\r\n          if(response.data){\r\n            isLogged = response.data.response;\r\n            \r\n            console.log(response.data);\r\n\r\n            if(isLogged){\r\n              dispatch({\r\n                type: \"LOGIN_WITH_LOGIN\",\r\n                payload: { \r\n                  isLogged, \r\n                  loggedInWith: \"login\",\r\n                  name: lastName + \" \" + firstName\r\n                }\r\n              })\r\n              history.push(\"/dashboard\")\r\n            } else {\r\n              console.log(response.data.errors);\r\n            }\r\n          }\r\n        })\r\n    } else {\r\n      console.log(\"Пароли не совпадают\")\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}