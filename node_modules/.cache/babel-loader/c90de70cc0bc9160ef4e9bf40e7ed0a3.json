{"ast":null,"code":"import*as firebase from\"firebase/app\";import{history}from\"../../../history\";import\"firebase/auth\";import\"firebase/database\";import axios from\"axios\";import{config}from\"../../../authServices/firebase/firebaseConfig\";// Init firebase if not already initialized\nif(!firebase.apps.length){firebase.initializeApp(config);}var firebaseAuth=firebase.auth();export var signupWithFirebase=function signupWithFirebase(email,password,name){return function(dispatch){var userEmail=null,loggedIn=false;// userName = null\nfirebaseAuth.createUserWithEmailAndPassword(email,password).then(function(result){firebaseAuth.onAuthStateChanged(function(user){result.user.updateProfile({displayName:name});if(user){userEmail=user.email;// let userName = user.displayName\nloggedIn=true;dispatch({type:\"SIGNUP_WITH_EMAIL\",payload:{email:userEmail,name:name,isSignedIn:loggedIn}});dispatch({type:\"LOGIN_WITH_EMAIL\",payload:{email:userEmail,name:name}});}});history.push(\"/\");}).catch(function(error){console.log(error.message);});};};export var signupForm=function signupForm(login,firstName,lastName,password,confirmPass,email,avatar,phoneNumber){return function(dispatch){if(password==confirmPass){axios.post(\"http://79.143.31.221/user/signup\",{login:login,firstName:firstName,lastName:lastName,password:password,email:email,//avatar: avatar,\nphoneNumber:phoneNumber}).then(function(response){var isOkay;if(response.data){isOkay=response.data.response;console.log(response.data.errors);if(isOkay){dispatch({type:\"SIGNUP_WITH_EMAIL\",payload:{isOkay:isOkay,loggedInWith:\"login\",name:lastName+\" \"+firstName}});history.push(\"/\");}else{console.log(response.data.errors);}}});}else{console.log(\"Пароли не совпадают\");}};};export var signupWithJWT=function signupWithJWT(email,password,name){return function(dispatch){axios.post(\"/api/authenticate/register/user\",{email:email,password:password,name:name}).then(function(response){var loggedInUser;if(response.data){loggedInUser=response.data.user;localStorage.setItem(\"token\",response.data.token);dispatch({type:\"LOGIN_WITH_JWT\",payload:{loggedInUser:loggedInUser,loggedInWith:\"jwt\"}});history.push(\"/\");}}).catch(function(err){return console.log(err);});};};","map":{"version":3,"sources":["D:/Work/Projects/GIQ/giq.itgeek.kz/src/redux/actions/auth/registerActions.js"],"names":["firebase","history","axios","config","apps","length","initializeApp","firebaseAuth","auth","signupWithFirebase","email","password","name","dispatch","userEmail","loggedIn","createUserWithEmailAndPassword","then","result","onAuthStateChanged","user","updateProfile","displayName","type","payload","isSignedIn","push","catch","error","console","log","message","signupForm","login","firstName","lastName","confirmPass","avatar","phoneNumber","post","response","isOkay","data","errors","loggedInWith","signupWithJWT","loggedInUser","localStorage","setItem","token","err"],"mappings":"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","sourcesContent":["import * as firebase from \"firebase/app\"\nimport { history } from \"../../../history\"\nimport \"firebase/auth\"\nimport \"firebase/database\"\nimport axios from \"axios\"\nimport { config } from \"../../../authServices/firebase/firebaseConfig\"\n\n// Init firebase if not already initialized\nif (!firebase.apps.length) {\n  firebase.initializeApp(config)\n}\n\nlet firebaseAuth = firebase.auth()\n\nexport const signupWithFirebase = (email, password, name) => {\n  return dispatch => {\n    let userEmail = null,\n      loggedIn = false\n    // userName = null\n\n    firebaseAuth\n      .createUserWithEmailAndPassword(email, password)\n      .then(result => {\n        firebaseAuth.onAuthStateChanged(user => {\n          result.user.updateProfile({\n            displayName: name\n          })\n          if (user) {\n            userEmail = user.email\n            // let userName = user.displayName\n            loggedIn = true\n            dispatch({\n              type: \"SIGNUP_WITH_EMAIL\",\n              payload: {\n                email: userEmail,\n                name,\n                isSignedIn: loggedIn\n              }\n            })\n            dispatch({\n              type: \"LOGIN_WITH_EMAIL\",\n              payload: {\n                email: userEmail,\n                name\n              }\n            })\n          }\n        })\n        history.push(\"/\")\n      })\n      .catch(error => {\n        console.log(error.message)\n      })\n  }\n}\n\nexport const signupForm = (\n    login,\n    firstName,\n    lastName,\n    password,\n    confirmPass,\n    email,\n    avatar,\n    phoneNumber\n) => {\n  return dispatch => {\n    if(password == confirmPass) {\n      axios\n        .post(\"http://79.143.31.221/user/signup\", {\n          login: login,\n          firstName: firstName,\n          lastName: lastName,\n          password: password,\n          email: email,\n          //avatar: avatar,\n          phoneNumber: phoneNumber\n        })\n        .then(response => {\n          var isOkay;\n\n          if(response.data){\n            isOkay = response.data.response;\n            \n            console.log(response.data.errors);\n\n            if(isOkay){\n              dispatch({\n                type: \"SIGNUP_WITH_EMAIL\",\n                payload: { \n                  isOkay, \n                  loggedInWith: \"login\",\n                  name: lastName + \" \" + firstName\n                }\n              })\n              history.push(\"/\")\n            } else {\n              console.log(response.data.errors);\n            }\n          }\n        })\n    } else {\n      console.log(\"Пароли не совпадают\")\n    }\n  }\n}\n\nexport const signupWithJWT = (email, password, name) => {\n  return dispatch => {\n    axios\n      .post(\"/api/authenticate/register/user\", {\n        email: email,\n        password: password,\n        name: name\n      })\n      .then(response => {\n        var loggedInUser\n\n        if(response.data){\n\n          loggedInUser = response.data.user\n\n          localStorage.setItem(\"token\", response.data.token)\n\n          dispatch({\n            type: \"LOGIN_WITH_JWT\",\n            payload: { loggedInUser, loggedInWith: \"jwt\" }\n          })\n\n          history.push(\"/\")\n        }\n\n      })\n      .catch(err => console.log(err))\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}